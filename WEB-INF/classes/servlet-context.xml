<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 开启扫描器 -->
    <context:component-scan base-package="com.levil.springmvc.controller"/>

    <!-- 使用默认的Servlet来响应静态文件 -->
    <mvc:default-servlet-handler/>

    <!-- 开启注解驱动 -->
    <!-- mvc 请求映射 处理器与适配器配置 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 拦截器设置
            方式一：在mvc:interceptors标签中直接定义bean标签
                bean标签的class执行拦截器的类路径，表示拦截所有请求
            <mvc:interceptors>
                <bean class="com.levil.springmvc.interceptor.MyInterceptor01"/>
            </mvc:interceptors>
    -->
    <!--
            方式二：推荐使用
            在mvc:interceptor标签下定义子标签mvc:interceptor,设置具体的拦截器
                在mvc:interceptor标签中：
                    设置mvc:mapping中的path属性，设置需要拦截的资源，可以用通配符"*"，可以配置多个，"/**/"表示拦截所有请求
                    设置mvc:exclude-mapping的path属性，设置需要放行的资源，可以用通配符"*"，可以配置多个
                    设置bean标签的class属性，设置指定拦截器的类路径
            拦截器链
            如果多个拦截器同时生效，则先配置的先执行
                先配置的拦截器中对应的preHandle方法，先执行
                后配置的拦截器中的postHandle，afterCompletion方法，后执行
    -->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash; 设置需要拦截的资源 &ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--            &lt;!&ndash; 设置需要放行的资源 &ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/url/*"/>-->
<!--            &lt;!&ndash; 设置指定拦截器的类路径 &ndash;&gt;-->
<!--            <bean class="com.levil.springmvc.interceptor.MyInterceptor01"/>-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->

    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 设置需要拦截的资源 -->
            <mvc:mapping path="/**"/>
            <!-- 设置需要放行的资源 -->
            <mvc:exclude-mapping path="/user/login"/>
            <!-- 设置指定拦截器的类路径 -->
            <bean class="com.levil.springmvc.interceptor.UserInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 允许上传的最大尺寸 -->
        <property name="maxUploadSize">
            <value>104857600</value>
        </property>
        <!--
            设置文件放入临时文件夹的最大大小限制
            此值是阙值，低于此值，则保存在内存中，如高于此值，则生成硬盘上的临时文件
        -->
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <!--  前缀：在WEB-INF的jsp目录下 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!--  后缀：以.jsp结尾的资源 -->
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>